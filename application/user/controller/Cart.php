<?php
/**
 * 购物车
 * User: @ 若雨
 * Date: 2018/9/20
 * Time: 9:25
 */

namespace app\user\controller;


use app\index\controller\BaseController;
use think\facade\Request;
use app\admin\model\Goods;
use app\admin\model\Cart as CartModel;
class Cart extends BaseController
{
    public function initialize(){
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->isLogin();
    }
    // 购物车列表
    public function info(){
        // 获取当前用户的购物车
        $data = CartModel::getCart();
        $userCart = $data['userCart'];
        $sum_price = $data['sum_price'];
        $is = count($userCart);
        $this->assign([
            'userCart'      =>   $userCart,
            'sum_price'     =>   $sum_price,
            'is'            =>   $is,
        ]);
        return $this->fetch('info');
    }
    // 加入购物车
    public function addCart(){
        if(Request::isAjax()){
            $data = Request::post();
            // 获取现有商品库存量
            $stock = Goods::getGoodsStock($data['goods_id']);
            // 判断是否库存量不足
            if($stock < $data['quantity']){
                $state = [
                    'code'  =>  -1,
                    'msg'   =>  '库存量不足'
                ];
              return json($state);
            }
            $user_id = session('user.id');
            // 入库
            //1、查询现有的商品是否已经入库
            $cart = CartModel::where(['g_id'=>$data['goods_id']])->find();
            // 如果购物车存在商品、则在现有的基础上将提交过来的数量修改
            if($cart){
                $number = $cart['number'];  // 获取数据库中的数量
                $number = $number + $data['quantity'];  // 加入现有的数量
                // 修改购物车对应的商品数量
                $info = CartModel::update(['number'=>$number],['g_id'=>$data['goods_id']]);
                if($info){
                    $state = [
                        'code'  =>  1,
                        'msg'   =>  '加入购物车成功'
                    ];
                    return json($state);
                }else{
                    $state = [
                        'code'  =>  -1,
                        'msg'   =>  '添加失败'
                    ];
                    return json($state);
                }
            }else{  // 如果购物车不存在商品、则新建记录创建新的
                $info = CartModel::create(['u_id'=>$user_id,'g_id'=>$data['goods_id'],'number'=>$data['quantity']]);
                // 获取购物车数量
                $count =  CartModel::where(['u_id'=>$user_id])->select()->count();
                if($info){
                    $state = [
                        'code'  =>  1,
                        'msg'   =>  '加入购物车成功',
                        'count' =>  $count
                    ];
                    return json($state);
                }else{
                    $state = [
                        'code'  =>  -1,
                        'msg'   =>  '添加失败'
                    ];
                    return json($state);
                }
            }
        }
    }
    // 减
    public function cartDelete(){
        if(Request::isAjax()){
            $data = Request::post();
            $user_id = session('user.id');
            // 1、查询数据库中的数量为1 不能减
            $number = CartModel::where(['u_id'=>$user_id])->where(['g_id'=>$data['goods_id']])->value('number');
            if($number === 1){
                $state = [
                    'code'  =>  -1,
                    'msg'   =>  '最小起订量是1 件',
                ];
                return json($state);
            }
            $info = CartModel::where(['u_id'=>$user_id])->where(['g_id'=>$data['goods_id']])->setDec('number');
            if($info){
                $state = [
                    'code'  =>  1,
                ];
                return json($state);
            }
        }
    }
    // 增加
    public function cartAdd(){
        if(Request::isAjax()){
            $data = Request::post();
            $user_id = session('user.id');
            // 检查库存量
            $stock  = Goods::getGoodsStock($data['goods_id']);
            // 获取商品购物车的数量
            $number = CartModel::where(['u_id'=>$user_id])->where(['g_id'=>$data['goods_id']])->value('number');
            if($stock <= $number){
                $in = CartModel::update(['number'=>$stock],['u_id'=>$user_id,'g_id'=>$data['goods_id']]);
                $state = [
                    'code'  =>  -1,
                    'msg'   =>  '库存量不足',
                    'stock' =>  $stock
                ];
                return json($state);

            }
            $info = CartModel::where(['u_id'=>$user_id])->where(['g_id'=>$data['goods_id']])->setInc('number');
            if($info){
                $state = [
                    'code'  =>  1,
                ];
                return json($state);
            }
        }
    }
    // 清空购物车
    public function truncate(){
        if(Request::isAjax()){
            $user_id = session('user.id');
            $info =  $info = CartModel::where(['u_id'=>$user_id])->delete();
            if($info){
                $state = [
                    'code'  =>  1,
                ];
                return json($state);
            }

        }
    }
}